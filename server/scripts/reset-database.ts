#!/usr/bin/env ts-node

/**
 * Script para reset manual do banco de dados
 * 
 * Execute com: npm run reset-db
 * ou: npx ts-node server/scripts/reset-database.ts
 */

import { initDatabase } from "../config/database";
import { resetDatabase, clearData, initializeTables } from "../config/init-database";

async function main() {
  console.log("üöÄ Iniciando script de reset do banco de dados...");
  
  try {
    // Conectar ao banco
    await initDatabase();
    console.log("‚úÖ Conectado ao banco de dados");

    // Obter argumentos da linha de comando
    const args = process.argv.slice(2);
    const operation = args[0] || 'help';

    switch (operation) {
      case 'reset':
        console.log("‚ö†Ô∏è INICIANDO RESET COMPLETO...");
        await resetDatabase();
        console.log("‚úÖ Reset completo finalizado!");
        break;

      case 'clear':
        console.log("üßπ INICIANDO LIMPEZA DE DADOS...");
        await clearData();
        console.log("‚úÖ Limpeza de dados finalizada!");
        break;

      case 'init':
        console.log("üîÑ INICIANDO VERIFICA√á√ÉO E CRIA√á√ÉO DE TABELAS...");
        await initializeTables();
        console.log("‚úÖ Inicializa√ß√£o finalizada!");
        break;

      case 'help':
      default:
        console.log(`
üìñ Como usar este script:

npm run reset-db reset     - Reset completo (remove e recria tabelas)
npm run reset-db clear     - Limpa dados (mant√©m estrutura)
npm run reset-db init      - Verifica/cria tabelas (n√£o remove dados)
npm run reset-db help      - Mostra esta ajuda

‚ö†Ô∏è ATEN√á√ÉO:
- 'reset' e 'clear' apagam TODOS os dados existentes
- Sempre fa√ßa backup antes de usar em produ√ß√£o
- Use apenas em desenvolvimento/teste
        `);
        break;
    }

  } catch (error) {
    console.error("‚ùå Erro durante a opera√ß√£o:", error);
    process.exit(1);
  } finally {
    process.exit(0);
  }
}

// Executar apenas se for chamado diretamente
if (require.main === module) {
  main();
}
