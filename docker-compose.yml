version: '3.8'

services:
  # API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    environment:
      # Server Configuration
      NODE_ENV: production
      PORT: 80
      
      # Database Configuration (update with your MySQL credentials)
      # These should be overridden in EasyPanel with your actual DB credentials
      DB_HOST: host.docker.internal
      DB_PORT: 3355
      DB_USER: barbearia
      DB_PASSWORD: 5f8dab8402afe2a6e043
      DB_NAME: barbearia-db
      
      # JWT Configuration (update with secure secrets)
      JWT_SECRET: sua-chave-secreta-super-segura-aqui-2024
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_SECRET: sua-chave-refresh-secreta-aqui-2024
      JWT_REFRESH_EXPIRES_IN: 7d
      
      # Application Configuration
      PING_MESSAGE: "API Barbearia Online!"
      
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3000/api/ping').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    
    # Resource limits (adjust based on your EasyPanel plan)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: MySQL Database (for local development)
  # In production, use EasyPanel's managed MySQL or external database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: barbearia-db
      MYSQL_USER: barbearia
      MYSQL_PASSWORD: 5f8dab8402afe2a6e043
    ports:
      - "3355:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    profiles:
      - local-db  # Use: docker-compose --profile local-db up

volumes:
  mysql_data:

# Networks
networks:
  default:
    name: barbearia-network
